# Generated by Django 2.1.5 on 2019-06-28 09:49

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cronjob', '0001_initial'),
        ('amazon', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ApiUserLogModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Update At')),
                ('creator_id', models.IntegerField(editable=False, null=True, verbose_name='Creator')),
                ('status', models.IntegerField(choices=[(1, 'Enabled'), (2, 'Disabled')], default=1, null=True, verbose_name='Status')),
                ('sort', models.IntegerField(default=0, null=True, verbose_name='Sort')),
                ('title', models.CharField(blank=True, max_length=100, null=True, verbose_name='title')),
                ('content', models.TextField(max_length=10000, null=True, verbose_name='Content')),
                ('action', models.CharField(max_length=100, null=True, verbose_name='Action')),
                ('ip', models.GenericIPAddressField(null=True, verbose_name='IP')),
            ],
            options={
                'verbose_name': 'User Log',
                'verbose_name_plural': 'User Log',
                'db_table': 'system_api_user_log',
            },
        ),
        migrations.CreateModel(
            name='DingTalkModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Update At')),
                ('creator_id', models.IntegerField(editable=False, null=True, verbose_name='Creator')),
                ('status', models.IntegerField(choices=[(1, 'Enabled'), (2, 'Disabled')], default=1, null=True, verbose_name='Status')),
                ('sort', models.IntegerField(default=0, null=True, verbose_name='Sort')),
                ('name', models.CharField(max_length=100, null=True, verbose_name='Name')),
                ('describe', models.TextField(max_length=255, null=True, verbose_name='Describe')),
                ('token', models.CharField(max_length=100, null=True, verbose_name='Token')),
                ('type', models.IntegerField(choices=[(1, 'Group'), (2, 'Person')], default=1, null=True, verbose_name='Type')),
            ],
            options={
                'verbose_name': 'Ding Talk',
                'verbose_name_plural': 'Ding Talk',
                'db_table': 'system_ding_talk',
            },
        ),
        migrations.CreateModel(
            name='IpStatisticsModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Update At')),
                ('creator_id', models.IntegerField(editable=False, null=True, verbose_name='Creator')),
                ('status', models.IntegerField(choices=[(1, 'Enabled'), (2, 'Disabled')], default=1, null=True, verbose_name='Status')),
                ('sort', models.IntegerField(default=0, null=True, verbose_name='Sort')),
                ('used_times', models.IntegerField(default=0, null=True, verbose_name='Proxy Port')),
                ('failed_times', models.IntegerField(default=0, null=True, verbose_name='Proxy Group')),
                ('last_run_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Last Run At')),
            ],
            options={
                'verbose_name': 'System Ip Statistics',
                'verbose_name_plural': 'System Ip Statistics',
                'db_table': 'system_ip_statistics',
            },
        ),
        migrations.CreateModel(
            name='MessageTemplateModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Update At')),
                ('creator_id', models.IntegerField(editable=False, null=True, verbose_name='Creator')),
                ('status', models.IntegerField(choices=[(1, 'Enabled'), (2, 'Disabled')], default=1, null=True, verbose_name='Status')),
                ('sort', models.IntegerField(default=0, null=True, verbose_name='Sort')),
                ('name', models.CharField(max_length=100, null=True, verbose_name='Name')),
                ('describe', models.CharField(max_length=255, null=True, verbose_name='Describe')),
                ('condition', models.TextField(max_length=10000, null=True, verbose_name='Condition')),
                ('content', models.TextField(max_length=10000, null=True, verbose_name='Content')),
                ('type', models.CharField(choices=[('markdown', 'Markdown')], max_length=50, verbose_name='Type')),
                ('message_type', models.CharField(max_length=50, null=True, verbose_name='Message Type')),
                ('cronjob', models.ForeignKey(on_delete=models.SET(0), related_name='cronjob+', to='cronjob.CronjobModel', verbose_name='Cronjob')),
                ('dingtalk', models.ManyToManyField(to='system.DingTalkModel', verbose_name='Dingtalk')),
            ],
            options={
                'verbose_name': 'Message Template',
                'verbose_name_plural': 'Message Template',
                'db_table': 'system_message_template',
            },
        ),
        migrations.CreateModel(
            name='ProxyIpModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Update At')),
                ('creator_id', models.IntegerField(editable=False, null=True, verbose_name='Creator')),
                ('status', models.IntegerField(choices=[(1, 'Enabled'), (2, 'Disabled')], default=1, null=True, verbose_name='Status')),
                ('sort', models.IntegerField(default=0, null=True, verbose_name='Sort')),
                ('platform', models.CharField(default='amazon', max_length=100, verbose_name='Platform')),
                ('platform_id', models.IntegerField(default=0, editable=False, null=True, verbose_name='Platform Id')),
                ('proxy_ip', models.CharField(max_length=15, null=True, verbose_name='Proxy Ip')),
                ('proxy_port', models.CharField(max_length=6, null=True, verbose_name='Proxy Port')),
                ('agent_type', models.IntegerField(choices=[(1, 'Third'), (2, 'Inner'), (3, 'Other')], default=1, null=True, verbose_name='Agent Type')),
                ('ip_statistics', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='system.IpStatisticsModel', verbose_name='Ip Statistics')),
            ],
            options={
                'verbose_name': 'Proxy Ip',
                'verbose_name_plural': 'Proxy Ip',
                'db_table': 'system_proxy_ip',
            },
        ),
        migrations.CreateModel(
            name='RegionModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Update At')),
                ('creator_id', models.IntegerField(editable=False, null=True, verbose_name='Creator')),
                ('status', models.IntegerField(choices=[(1, 'Enabled'), (2, 'Disabled')], default=1, null=True, verbose_name='Status')),
                ('sort', models.IntegerField(default=0, null=True, verbose_name='Sort')),
                ('country', models.CharField(max_length=100, null=True, verbose_name='Country')),
                ('country_code', models.CharField(max_length=50, null=True, verbose_name='Country Code')),
                ('region', models.CharField(max_length=100, null=True, verbose_name='Region')),
                ('region_code', models.CharField(max_length=100, null=True, verbose_name='Region Code')),
                ('city', models.CharField(max_length=100, null=True, verbose_name='City')),
                ('locale', models.CharField(max_length=50, null=True, verbose_name='Locale')),
                ('timezone', models.CharField(max_length=100, null=True, verbose_name='Timezone')),
                ('ip_section', models.CharField(max_length=100, null=True, verbose_name='Ip Section')),
            ],
            options={
                'verbose_name': 'Region',
                'verbose_name_plural': 'Region',
                'db_table': 'system_region',
            },
        ),
        migrations.CreateModel(
            name='ServerConfigModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Update At')),
                ('creator_id', models.IntegerField(editable=False, null=True, verbose_name='Creator')),
                ('status', models.IntegerField(choices=[(1, 'Enabled'), (2, 'Disabled')], default=1, null=True, verbose_name='Status')),
                ('sort', models.IntegerField(default=0, null=True, verbose_name='Sort')),
                ('platform', models.CharField(default='amazon', max_length=100, verbose_name='Platform')),
                ('platform_id', models.IntegerField(default=0, editable=False, null=True, verbose_name='Platform Id')),
                ('name', models.CharField(max_length=100, null=True, verbose_name='Name')),
                ('ip', models.CharField(max_length=15, null=True, verbose_name='IP')),
                ('port', models.CharField(max_length=6, null=True, verbose_name='Port')),
                ('timezone', models.CharField(choices=[('Australia/Melbourne', 'Australia/Melbourne'), ('Asia/Shanghai', 'Asia/Shanghai')], max_length=100, null=True, verbose_name='Timezone')),
                ('key', models.CharField(max_length=100, null=True, verbose_name='Key')),
                ('token', models.CharField(max_length=100, null=True, verbose_name='Token')),
                ('token_expire', models.IntegerField(default=360, null=True, verbose_name='Token Expire (day)')),
                ('api_account', models.CharField(max_length=60, null=True, verbose_name='Account')),
                ('api_password', models.CharField(max_length=60, null=True, verbose_name='Password')),
                ('api_version', models.IntegerField(default=1, null=True, verbose_name='Version')),
                ('max_process', models.IntegerField(default=1, verbose_name='Max Process')),
                ('process', models.IntegerField(default=1, verbose_name='Process')),
                ('api_list', models.TextField(max_length=10000, null=True, verbose_name='Api List')),
                ('remark', models.TextField(max_length=10000, null=True, verbose_name='Remark')),
            ],
            options={
                'verbose_name': 'Scrapy Server Config',
                'verbose_name_plural': 'Scrapy Server Config',
                'db_table': 'system_server_config',
            },
        ),
        migrations.CreateModel(
            name='ServerStatusModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Update At')),
                ('creator_id', models.IntegerField(editable=False, null=True, verbose_name='Creator')),
                ('status', models.IntegerField(choices=[(1, 'Enabled'), (2, 'Disabled')], default=1, null=True, verbose_name='Status')),
                ('sort', models.IntegerField(default=0, null=True, verbose_name='Sort')),
                ('running_status', models.IntegerField(choices=[(0, 'Stopped'), (1, 'Running'), (2, 'Error')], default=0, editable=False, verbose_name='Running Status')),
                ('jobs', models.IntegerField(default=0, verbose_name='Jobs')),
            ],
            options={
                'verbose_name': 'Server Status',
                'verbose_name_plural': 'Server Status',
                'db_table': 'system_server_status',
            },
        ),
        migrations.CreateModel(
            name='TemplateRunLogModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Update At')),
                ('creator_id', models.IntegerField(editable=False, null=True, verbose_name='Creator')),
                ('status', models.IntegerField(choices=[(1, 'Enabled'), (2, 'Disabled')], default=1, null=True, verbose_name='Status')),
                ('sort', models.IntegerField(default=0, null=True, verbose_name='Sort')),
                ('sku_buy_box_state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sku_buy_box_state+', to='amazon.CaptureSkuBuyBoxStateModel', verbose_name='Buy Box State')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='template+', to='system.MessageTemplateModel', verbose_name='template')),
            ],
            options={
                'verbose_name': 'Template Run Log',
                'verbose_name_plural': 'Template Run Log',
                'db_table': 'system_template_run_log',
            },
        ),
        migrations.CreateModel(
            name='TemplateVarModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Update At')),
                ('creator_id', models.IntegerField(editable=False, null=True, verbose_name='Creator')),
                ('status', models.IntegerField(choices=[(1, 'Enabled'), (2, 'Disabled')], default=1, null=True, verbose_name='Status')),
                ('sort', models.IntegerField(default=0, null=True, verbose_name='Sort')),
                ('name', models.CharField(max_length=100, null=True, verbose_name='Name')),
                ('code', models.CharField(max_length=50, null=True, unique=True, verbose_name='Code')),
                ('type', models.IntegerField(choices=[(1, 'String'), (2, 'Number'), (3, 'Date'), (4, 'DateTime'), (5, 'Boolean'), (6, 'Enum')], default=1, null=True, verbose_name='Type')),
                ('scope', models.IntegerField(choices=[(1, 'System'), (2, 'Multi Model'), (3, 'Single Model')], default=1, null=True, verbose_name='Scope')),
                ('message_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='Message Type')),
                ('is_custom', models.BooleanField(default=False, verbose_name='Is Custom')),
                ('value', models.TextField(blank=True, max_length=10000, null=True, verbose_name='Value')),
            ],
            options={
                'verbose_name': 'Template Variant',
                'verbose_name_plural': 'Template Variant',
                'db_table': 'system_template_var',
            },
        ),
        migrations.AddField(
            model_name='serverconfigmodel',
            name='server_status',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='system.ServerStatusModel', verbose_name='Running Status'),
        ),
        migrations.AddField(
            model_name='proxyipmodel',
            name='region',
            field=models.ForeignKey(on_delete=models.SET(0), related_name='Region+', to='system.RegionModel', verbose_name='Region'),
        ),
    ]
